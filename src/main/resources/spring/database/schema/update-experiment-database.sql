-- Add foreign key constraint to existing Experiments table
alter table Experiments
ADD FOREIGN KEY (taskid) REFERENCES ExperimentTasks(id);
-- Add forein key constraint to existing ExperimentTasks_SubTasks table
alter table ExperimentTasks_SubTasks
ADD FOREIGN KEY (taskid) REFERENCES ExperimentTasks(id);

alter table ExperimentTasks_SubTasks
ADD FOREIGN KEY (subTaskId) REFERENCES ExperimentTasks(id);
-- New table added for mapping from resultId to resultName (optional but would make the solution cleaner)
CREATE TABLE IF NOT EXISTS ResultNames (
id int GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
name VARCHAR(50)
);
-- Insert records into ResultNames
insert into ResultNames values (0, 'Micro F1 score');
insert into ResultNames values (1, 'Micro Precision');
insert into ResultNames values (2, 'Micro Recall');
insert into ResultNames values (3, 'Macro F1 score');
insert into ResultNames values (4, 'Macro Precision');
insert into ResultNames values (5, 'Macro Recall');
insert into ResultNames values (6, 'Macro Accuracy');
insert into ResultNames values (7, 'Micro Accuracy');
insert into ResultNames values (8, 'InKB Macro F1 score');
insert into ResultNames values (9, 'InKB Macro Precision');
insert into ResultNames values (10, 'InKB Macro Recall');
insert into ResultNames values (11, 'InKB Micro F1 score');
insert into ResultNames values (12, 'InKB Micro Precision');
insert into ResultNames values (13, 'InKB Micro Recall');
insert into ResultNames values (14, 'EE Macro F1 score');
insert into ResultNames values (15, 'EE Macro Precision');
insert into ResultNames values (16, 'EE Macro Recall');
insert into ResultNames values (17, 'EE Micro F1 score');
insert into ResultNames values (18, 'EE Micro Precision');
insert into ResultNames values (19, 'EE Micro Recall');
insert into ResultNames values (20, 'avg millis/doc');
insert into ResultNames values (21, 'confidence threshold');
insert into ResultNames values (22, 'GSInKB Macro F1 score');
insert into ResultNames values (23, 'GSInKB Macro Precision');
insert into ResultNames values (24, 'GSInKB Macro Recall');
insert into ResultNames values (25, 'GSInKB Micro F1 score');
insert into ResultNames values (26, 'GSInKB Micro Precision');
insert into ResultNames values (27, 'Error Count');
-- Create Int, Double and Blob results table
-- New table added for int results (e.g., number of errors)
CREATE TABLE IF NOT EXISTS ExperimentTasks_IntResults (
resultId int NOT NULL FOREIGN KEY REFERENCES ResultNames(id),
taskId int NOT NULL FOREIGN KEY REFERENCES ExperimentTasks(id),
resvalue int,
PRIMARY KEY (resultId, taskId)
);

-- ExperimentTasks_AdditionalResults will be renamed to ExperimentTasks_DoubleResults
CREATE TABLE IF NOT EXISTS ExperimentTasks_DoubleResults (
resultId int NOT NULL FOREIGN KEY REFERENCES ResultNames(id),
taskId int NOT NULL FOREIGN KEY REFERENCES ExperimentTasks(id),
resvalue double,
PRIMARY KEY (resultId, taskId)
);

-- New table added for blob results (e.g., ROC)
CREATE TABLE IF NOT EXISTS ExperimentTasks_BlobResults (
resultId int NOT NULL FOREIGN KEY REFERENCES ResultNames(id),
taskId int NOT NULL FOREIGN KEY REFERENCES ExperimentTasks(id),
resvalue BLOB,
PRIMARY KEY (resultId, taskId)
);
-- copy data from ExperimentTasks to int, double and blob table
insert into ExperimentTasks_DoubleResults (resultId, taskId, resvalue)
select 0, id, microF1 from ExperimentTasks;
--microPrecision
insert into ExperimentTasks_DoubleResults (resultId, taskId, resvalue)
select 1, id, microPrecision from ExperimentTasks;
--microRecall
insert into ExperimentTasks_DoubleResults (resultId, taskId, resvalue)
select 2, id, microRecall from ExperimentTasks;
--macroF1
insert into ExperimentTasks_DoubleResults (resultId, taskId, resvalue)
select 3, id, macroF1 from ExperimentTasks;
--macroPrecision
insert into ExperimentTasks_DoubleResults (resultId, taskId, resvalue)
select 4, id, macroPrecision from ExperimentTasks;
--macroRecall
insert into ExperimentTasks_DoubleResults (resultId, taskId, resvalue)
select 5, id, macroRecall from ExperimentTasks;
--errorCount
insert into ExperimentTasks_IntResults (resultId, taskId, resvalue)
select 27, id, errorCount from ExperimentTasks;
-- copy data from AdditionalResults to double
insert into ExperimentTasks_DoubleResults (resultId, taskId, resvalue)
select resultId, taskId, value from ExperimentTasks_AdditionalResults;
-- Add version column
ALTER TABLE ExperimentTasks
ADD version varchar(20);
-- copy data from ExperimentTasks_Version to ExperimentTasks
update ExperimentTasks et set et.version = 
(select ev.version from  ExperimentTasks_Version ev where et.id = ev.id);
-- Alter annotatorName to sysname
ALTER TABLE ExperimentTasks ALTER COLUMN annotatorName RENAME TO systemName;
-- Drop the copied columns from ExperimentTasks
alter table ExperimentTasks
    drop column microF1;
alter table ExperimentTasks
    drop column  microPrecision;
alter table ExperimentTasks
    drop column microRecall;
alter table ExperimentTasks
    drop column macroF1;
alter table ExperimentTasks
    drop column macroPrecision;
alter table ExperimentTasks
    drop column macroRecall;
alter table ExperimentTasks
    drop column errorCount ;
-- Drop Version table
drop table ExperimentTasks_Version;
-- Drop AdditionalResults table
drop table ExperimentTasks_AdditionalResults;